// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.appins.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** The MetricsData model. */
@Fluent
public final class MetricsData extends Domain {
    /*
     * Schema version
     */
    @JsonProperty(value = "ver", required = true)
    private int ver;

    /*
     * List of metrics. Only one metric in the list is currently supported by
     * Application Insights storage. If multiple data points were sent only the
     * first one will be used.
     */
    @JsonProperty(value = "metrics", required = true)
    private List<DataPoint> metrics;

    /*
     * Collection of custom properties. TODO: max key length validate
     */
    @JsonProperty(value = "properties")
    private Map<String, String> properties;

    /**
     * Get the ver property: Schema version.
     *
     * @return the ver value.
     */
    public int getVer() {
        return this.ver;
    }

    /**
     * Set the ver property: Schema version.
     *
     * @param ver the ver value to set.
     * @return the MetricsData object itself.
     */
    public MetricsData setVer(int ver) {
        this.ver = ver;
        return this;
    }

    /**
     * Get the metrics property: List of metrics. Only one metric in the list is currently supported by Application
     * Insights storage. If multiple data points were sent only the first one will be used.
     *
     * @return the metrics value.
     */
    public List<DataPoint> getMetrics() {
        return this.metrics;
    }

    /**
     * Set the metrics property: List of metrics. Only one metric in the list is currently supported by Application
     * Insights storage. If multiple data points were sent only the first one will be used.
     *
     * @param metrics the metrics value to set.
     * @return the MetricsData object itself.
     */
    public MetricsData setMetrics(List<DataPoint> metrics) {
        this.metrics = metrics;
        return this;
    }

    /**
     * Get the properties property: Collection of custom properties. TODO: max key length validate.
     *
     * @return the properties value.
     */
    public Map<String, String> getProperties() {
        return this.properties;
    }

    /**
     * Set the properties property: Collection of custom properties. TODO: max key length validate.
     *
     * @param properties the properties value to set.
     * @return the MetricsData object itself.
     */
    public MetricsData setProperties(Map<String, String> properties) {
        this.properties = properties;
        return this;
    }
}
